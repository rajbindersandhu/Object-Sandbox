{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","keyStr","setKeyStr","keyList","setKeyList","valueVisible","setValueVisible","valueStr","setValueStr","valueList","setValueList","finalVisible","setFinalVisible","objList","setObjList","key","value","obj","setObj","showTable","setShowTable","changeValue","e","target","id","length","className","rows","cols","onChange","placeholder","style","paddingLeft","disabled","onClick","tempList","split","filter","item","test","alert","selected","map","index","trim","type","tempObj","push","border","Object","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9052233e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\n//import List from\"./components/list/list.js\";\nfunction App() {\n  let[keyStr,setKeyStr] = React.useState(\"\");\n  let [keyList, setKeyList] = React.useState([]);\n  let [valueVisible, setValueVisible] = React.useState(false);\n  let [valueStr,setValueStr]= React.useState(\"\");\n  let [valueList, setValueList] = React.useState([]);\n  let [finalVisible,setFinalVisible] = React.useState(false);\n  \n  let [objList, setObjList] = React.useState([]);\n  let [obj,setObj] = React.useState({\n    key : \"\",\n    value: \"\"\n  });\n\n  let [showTable, setShowTable] = React.useState(false);\n\n  function reset(){\n    setKeyStr(\"\");\n    setKeyList([]);\n    setValueVisible(false);\n    setValueStr(\"\");\n    setValueList([]);\n    setFinalVisible(false);\n    setObjList([]);\n    setObj({\n      key : \"\",\n      value: \"\"\n    });\n    setShowTable(false);\n  }\n\n  function callValue(){\n    if(keyStr.length > 0){\n      let tempList = keyStr.split(\",\").filter(item=> /[\\w]+/.test(item));\n      setKeyList([...tempList]);\n      setValueVisible(true);\n    }\n    else{\n      alert(\"Enter the key List\");\n    }\n  }\n  function callFinal(){\n    if(valueStr.length>0){\n      let tempList = valueStr.split(\",\").filter(item=> /[\\w]+/.test(item));;\n      setValueList([...tempList]);\n    }\n    setFinalVisible(true);\n  }\n  function changeValue(e){\n    if(e.target.id=\"inpOpt\" && e.target.value.length > 0){\n      setObj({...obj,value : e.target.value});\n    }\n    else if(e.target.id=\"selOpt\"){\n      setObj({...obj,value : e.target.value});\n    }\n  }\n\n  function addToObject(){\n    if(obj.key.length > 0 && obj.value.length > 0){\n    \n        let tempObj ={};\n        tempObj[obj.key] = obj.value;\n        objList.push(tempObj);\n        setObjList([...objList]);\n        setShowTable(true);\n    }\n     \n   \n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"key-box\">\n        <h3>Enter the list of keys below : </h3>\n        <p>(seprated by comma's)</p>\n        <textarea rows={5} cols={50} value = {keyStr} onChange={(e)=> setKeyStr(e.target.value)} placeholder =\"A, B, C......\" style={{paddingLeft:\"2%\"}} disabled={valueVisible}></textarea><br/>\n        <button onClick = {callValue} disabled={valueVisible}>NEXT</button>\n      </div>\n      {valueVisible ?\n        <div className=\"value-box\">\n          <h3>Enter the list of values below (optional) : </h3>\n          <p>(seprated by comma's)</p>\n          <textarea rows={5} cols={50} value = {valueStr} onChange={(e)=>setValueStr(e.target.value)} placeholder =\"A, B, C......\" style={{paddingLeft:\"2%\"}} disabled={finalVisible}></textarea>\n          <br/><button onClick = {callFinal} disabled={finalVisible}>NEXT</button>\n        </div>\n        :\n        null}\n      {finalVisible ?\n        <div className=\"final-box\">\n          <p>Select the key : </p>\n          <select onChange = {(e)=>setObj({...obj,key : e.target.value})}>\n          <option disabled selected>Select Key</option>\n            {keyList.map((item,index)=><option key={index}>{item.trim()}</option>)}\n          </select>\n          <p>Select the Value : </p>\n          <select id=\"selOpt\" onChange = {changeValue}>\n            <option disabled selected>Select Value</option>\n            {valueList.map((item,index)=><option key={index}>{item.trim()}</option>)}\n          </select>\n          <span> OR </span>\n          <input type=\"text\"  id =\"inpOpt\" onChange ={changeValue}/>\n          <br/>\n            <div className=\"btn-final\">\n              <button onClick = {addToObject}>ADD</button>\n              <button onClick ={reset}>ReStart</button>\n          </div>\n        </div>\n        :null\n      }\n      <fieldset>\n        <legend>Object table</legend>\n      {showTable ?\n        <div className =\"table\">\n          <table className=\"obj-table\">\n            <thead>\n              <tr >\n                <th style={{border:\"2px solid black\"}}>Key</th><th style={{border:\"2px solid black\"}}>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {objList.map((item,index) => <tr key={index}><td style={{border:\"2px solid black\"}}>{Object.keys(item)[0]}</td><td style={{border:\"2px solid black\"}}>{item[Object.keys(item)[0]]}</td></tr>)}\n            </tbody>\n          </table>\n        </div>\n        :\n        null\n      }\n      </fieldset>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}